//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: INFO0.bt
//   Authors: Raytwo, DeathChaos, TildeHat, SciresM
//   Version: 1.1
//   Purpose: Parse entries for a LayeredFS-like file that patches DATA1.bin files.
//  Category: Archives
// File Mask: *.bin
//  ID Bytes: /
//   History:
//   1.0    2019-08-04  Raytwo: Made the original file
//   1.1	2019-09-15	Raytwo & Moonling: Add a read function to show the content of the entry
//------------------------------------------------

LittleEndian();

//One entry is 0x120 bytes
local int entryCount = FileSize()/0x120;

struct ENTRY {
	uint64 entryID<name="Entry ID", comment="Refer to the entry being replaced from DATA0.bin", format=decimal, fgcolor=cYellow>;
	uint64 decompressed_size<name="Decompressed size", comment="Decompressed size of the entry", format=hex, fgcolor=cLtBlue>;
	uint64 compressed_size<name="Compressed size", comment="Compressed size of the entry", format=hex, fgcolor=cLtPurple>;
uint64 is_compressed<name="Is Compressed?", comment="Boolean, should be 1 if a compressed size is available", fgcolor=cLtGreen>; //Actually a boolean but that way the parsing is easier
char filename[0x100]<name="Filename", fgcolor=cLtRed>;
} Entries[entryCount]<read=GetEntryId>;

string GetEntryId(ENTRY &e)
{
	string s;
	SPrintf(s, "%d - %s", (int)e.entryID, e.filename);
	return s;
}